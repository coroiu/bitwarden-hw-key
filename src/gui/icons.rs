use embedded_graphics::image::ImageRaw;
use embedded_graphics_core::pixelcolor::BinaryColor;

pub struct Icon<'a> {
    pub width: u32,
    pub data: &'a [u8],
}

#[rustfmt::skip]
pub const BITWARDEN_LOGO: Icon = Icon {
    width: 128,
    data: &[
      0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 
      0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 
      0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 
      0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 
      0b00111111, 0b11111111, 0b10000000, 0b11110000, 0b00000011, 0b11000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b00000000, 0b00000000, 0b00000000, 
      0b00111111, 0b11111111, 0b10000000, 0b11110000, 0b00000011, 0b11000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b00000000, 0b00000000, 0b00000000, 
      0b00111111, 0b11000001, 0b10000000, 0b11110000, 0b00000001, 0b10000011, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b00000000, 0b00000000, 0b00000000, 
      0b00111111, 0b11000001, 0b10000000, 0b11110000, 0b00000000, 0b00000011, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b00000000, 0b00000000, 0b00000000, 
      0b00111111, 0b11000001, 0b10000000, 0b11110111, 0b10000001, 0b10000011, 0b11110000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b00000000, 0b00000000, 0b00000000, 
      0b00111111, 0b11000001, 0b10000000, 0b11111111, 0b11000011, 0b11001111, 0b11110010, 0b00000100, 0b00001000, 0b11111100, 0b00010111, 0b10000111, 0b11101000, 0b00111111, 0b00000101, 0b11111000, 
      0b00111111, 0b11000001, 0b10000000, 0b11111111, 0b11100011, 0b11001111, 0b11110011, 0b00000100, 0b00001000, 0b00000010, 0b00010100, 0b00001000, 0b00011000, 0b01100000, 0b10000110, 0b00000100, 
      0b00111111, 0b11000001, 0b10000000, 0b11110000, 0b11100011, 0b11000111, 0b10000001, 0b00001010, 0b00001000, 0b00000010, 0b00011000, 0b00011000, 0b00011000, 0b01000000, 0b10000110, 0b00000100, 
      0b00111111, 0b11000001, 0b10000000, 0b11110000, 0b11110011, 0b11000111, 0b10000001, 0b00001010, 0b00001000, 0b00000001, 0b00010000, 0b00010000, 0b00001000, 0b11000000, 0b11000100, 0b00000100, 
      0b00111111, 0b11000001, 0b10000000, 0b11110000, 0b11110011, 0b11000111, 0b10000001, 0b00001010, 0b00010000, 0b00000001, 0b00010000, 0b00010000, 0b00001000, 0b10000000, 0b01000100, 0b00000100, 
      0b00111111, 0b11000001, 0b10000000, 0b11110000, 0b11110011, 0b11000111, 0b10000000, 0b10010001, 0b00010000, 0b01111111, 0b00010000, 0b00010000, 0b00001000, 0b11111111, 0b11000100, 0b00000100, 
      0b00111111, 0b11000001, 0b10000000, 0b11110000, 0b11110011, 0b11000111, 0b10000000, 0b10010001, 0b00010001, 0b10000001, 0b00010000, 0b00010000, 0b00001000, 0b10000000, 0b00000100, 0b00000100, 
      0b00111111, 0b11000011, 0b10000000, 0b11110000, 0b11110011, 0b11000111, 0b10000000, 0b10100000, 0b10100001, 0b00000001, 0b00010000, 0b00010000, 0b00001000, 0b10000000, 0b00000100, 0b00000100, 
      0b00011111, 0b11000111, 0b00000000, 0b11110000, 0b11100011, 0b11000111, 0b10000000, 0b10100000, 0b10100001, 0b00000001, 0b00010000, 0b00010000, 0b00011000, 0b01000000, 0b00000100, 0b00000100, 
      0b00001111, 0b11001110, 0b00000000, 0b11111111, 0b11100011, 0b11000011, 0b11110000, 0b10100000, 0b10100001, 0b00000011, 0b00010000, 0b00001000, 0b00011000, 0b01000000, 0b01000100, 0b00000100, 
      0b00000111, 0b11011100, 0b00000000, 0b11101111, 0b11000011, 0b11000011, 0b11110000, 0b01100000, 0b01100001, 0b10000101, 0b00010000, 0b00001100, 0b00101000, 0b00100000, 0b10000100, 0b00000100, 
      0b00000011, 0b11111000, 0b00000000, 0b11100111, 0b10000011, 0b11000001, 0b11110000, 0b01000000, 0b01000000, 0b11111000, 0b00010000, 0b00000011, 0b11001000, 0b00011111, 0b00000100, 0b00000100, 
      0b00000001, 0b11110000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 
      0b00000000, 0b01000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 
      0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 
      0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 
      0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000
    ]
};

impl<'a> Icon<'a> {
    pub fn as_image_raw(&self) -> ImageRaw<BinaryColor> {
        ImageRaw::<BinaryColor>::new(&self.data, self.width)
    }
}
